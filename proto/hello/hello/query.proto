syntax = "proto3";
package hello.hello;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "hello/hello/params.proto";
import "hello/hello/post.proto";
// this line is used by starport scaffolding # 1

option go_package = "hello/x/hello/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/hello/hello/params";
  }
  // Queries a list of Hello items.
	rpc Hello(QueryHelloRequest) returns (QueryHelloResponse) {
		option (google.api.http).get = "/hello/hello/hello";
	}

// Queries a list of Posts items.
	rpc Posts(QueryPostsRequest) returns (QueryPostsResponse) {
		option (google.api.http).get = "/hello/hello/posts";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryHelloRequest {
}

message QueryHelloResponse {
  string text = 1;
}

message QueryPostsRequest {
  // Adding pagination to request
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryPostsResponse {
  // Returning a list of posts
  repeated Post Post = 1;

  // Adding pagination to response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
